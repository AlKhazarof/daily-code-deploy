name: 'Weekly Git Lock Check'

on:
  schedule:
    - cron: '0 3 * * 1' # Every Monday at 03:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  actions: read

jobs:
  check-locks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Find Git lock files
        id: findlocks
        run: |
          set -e
          chmod +x ./scripts/check-git-locks.sh
          ./scripts/check-git-locks.sh 2>&1 | tee lock-check-output.txt || true
          echo "output<<EOF" >> $GITHUB_OUTPUT
          cat lock-check-output.txt
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create issue on lock detection (REST)
        if: steps.findlocks.outputs.output && contains(steps.findlocks.outputs.output, 'Found lock:')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          OWNER: ${{ github.repository_owner }}
        run: |
          echo "Lock files detected â€” creating an issue via REST API"
          TITLE="[CI] Git lock files detected in repository"
          BODY=$(cat lock-check-output.txt | sed 's/^/\n/; s/"/\\"/g')
          PAYLOAD=$(jq -n --arg title "$TITLE" --arg body "$BODY" --argjson labels '["lock-check","auto-created"]' --argjson assignees '["AlKhazarof"]' '{title: $title, body: $body, labels: $labels, assignees: $assignees}')
          echo "Payload: $PAYLOAD"
          curl -sS -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" https://api.github.com/repos/$REPO/issues -d "$PAYLOAD" || echo "Issue creation failed"
      - name: Slack notification (optional)
        if: ${{ secrets.SLACK_WEBHOOK_URL != '' }} && (steps.findlocks.outputs.output && contains(steps.findlocks.outputs.output, 'Found lock:'))
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Posting notification to Slack webhook"
          payload=$(jq -n --arg text "Git lock files detected in ${{ github.repository }}\n\n$(cat lock-check-output.txt)" '{text: $text}')
          curl -sS -X POST -H "Content-Type: application/json" -d "$payload" "$SLACK_WEBHOOK_URL" || echo "Slack post failed"
      - name: Discord notification (optional)
        if: ${{ secrets.DISCORD_WEBHOOK_URL != '' }} && (steps.findlocks.outputs.output && contains(steps.findlocks.outputs.output, 'Found lock:'))
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo "Posting notification to Discord webhook"
          payload=$(jq -n --arg content "Git lock files detected in ${{ github.repository }}\n\n$(cat lock-check-output.txt)" '{content: $content}')
          curl -sS -X POST -H "Content-Type: application/json" -d "$payload" "$DISCORD_WEBHOOK_URL" || echo "Discord post failed"
      - name: Optional generic webhook notification
        if: ${{ secrets.LOCKS_WEBHOOK_URL != '' }} && (steps.findlocks.outputs.output && contains(steps.findlocks.outputs.output, 'Found lock:'))
        env:
          WEBHOOK_URL: ${{ secrets.LOCKS_WEBHOOK_URL }}
        run: |
          echo "Sending webhook notification to configured URL"
          payload=$(jq -n --arg event "lock-detected" --arg repo "${{ github.repository }}" --arg details "$(cat lock-check-output.txt)" '{event: $event, repository: $repo, details: $details}')
          curl -sS -X POST -H "Content-Type: application/json" -d "$payload" "$WEBHOOK_URL" || echo "Webhook post failed"
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: git-locks-report
          path: |
            lock-check-output.txt
            .git/*lock
            .git/refs/**/.*lock
