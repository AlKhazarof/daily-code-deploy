[
  {
    "id": "node-smoke",
    "name": "Node.js Smoke Test",
    "description": "Install dependencies and run the default npm test script.",
    "recommendedFor": ["Node.js", "TypeScript", "React"],
    "steps": [
      "if [ -f package.json ]; then npm install; else echo 'package.json not found, skipping npm install'; fi",
      "if [ -f package.json ]; then npm test -- --watch=false || npm test; else echo 'package.json not found, skipping npm test'; fi"
    ]
  },
  {
    "id": "python-quality",
    "name": "Python Quality Gate",
    "description": "Run linting and tests for a Python project with pytest.",
    "recommendedFor": ["Python", "Django", "FastAPI"],
    "steps": [
      "python -m pip install --upgrade pip",
      "if [ -f requirements.txt ]; then pip install -r requirements.txt; fi",
      "if [ -f pyproject.toml ]; then pip install '.[test]' || true; fi",
      "pytest"
    ]
  },
  {
    "id": "static-deploy",
    "name": "Static Site Build",
    "description": "Build a static site and prep an artifact directory for deployment.",
    "recommendedFor": ["Docs", "Landing pages", "Vite", "Next.js"],
    "steps": [
      "if [ -f package.json ]; then npm install; else echo 'package.json not found, skipping npm install'; fi",
      "if [ -f package.json ]; then npm run build || npm run docs:build; else echo 'package.json not found, skipping build'; fi",
      "ls -R"
    ]
  }
]
